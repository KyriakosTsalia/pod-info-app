stages:
  - build
  - package
  - test
  - deploy

variables:
  APP_VERSION: $CI_PIPELINE_IID-$CI_COMMIT_SHORT_SHA

.build binary:
  stage: build
  image: golang:1.19-alpine3.17
  script:
    - apk add --no-cache make git build-base gettext
    - mkdir build
    - envsubst < main.html > build/main.html
    - make
  artifacts:
    paths:
      - build

.docker build:
  stage: package
  services:
    - docker:23.0.4-dind
  image: docker:23.0.4
  script:
    - apk add curl
    - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER $CI_REGISTRY --password-stdin
    - docker build -t $CI_REGISTRY_IMAGE -t $CI_REGISTRY_IMAGE:$APP_VERSION .
    - docker image ls
    - docker push --all-tags $CI_REGISTRY_IMAGE

.integration tests:
  stage: test
  services:
    - name: $CI_REGISTRY_IMAGE:$APP_VERSION
      alias: app
  image: curlimages/curl
  script:
    - curl http://app:8080 | grep $APP_VERSION

create merge request:
  stage: deploy
  image: 
    name: gitlab/glab:v1.28.1
    entrypoint: [""]
  script:
    # to be able to use the CI_JOB_TOKEN the pure-gitops project must add the pod-info-app project to its allowlist -
    # that is not needed for public or internal projects
    - git clone https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/kyriakos_tsalia/pure-gitops
    - cd pure-gitops
    - git checkout -b feature/app-version_$APP_VERSION
    - sed -i "s#registry.gitlab.com.*#$CI_REGISTRY_IMAGE:${APP_VERSION}#g" manifests/deployment.yaml
    - cat manifests/deployment.yaml

